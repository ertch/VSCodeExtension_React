@import "../base/variables";
@import "../base/colors";

input,
input::before,
input::after,
label::before,
label::after,
select {
  transition-duration: 150ms;
  transition-property: background-color, border-color, color, fill, stroke,
    opacity, box-shadow, transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

input:hover {
  border: 1px solid $green;
  box-shadow: 0 0 0 1px $lightgrey;
}

input[disabled] {
  background-color: $lightgrey;
  color: $darkgrey;
  cursor: not-allowed;
}

input[readonly] {
  background-color: $lightgrey;
}

textarea {
  width: 100%;
}

/* Just inputs */
.input-text,
.input-textarea {
  border: 1px solid $lightgrey;
  border-radius: 2px;
  display: flex;
  flex-wrap: 2 1;
  font-size: inherit;
  height: 40px;
  width: 100%;
  
  min-width: 148px;
  
  padding: $baseunit * 0.25 $baseunit * 1 $baseunit * 0.125 $baseunit * 0.5;
  
  
  
  margin-bottom: 1.3em;

  &:focus {
    border-color: $blue;
    //outline: 1px solid transparent;
  }

  &--success {
    padding-right: $baseunit * 2;
    border-color: $green;
    background-image: url("../svg/iconspritesmall3.svg#check");
    background-position: center right;
    background-repeat: no-repeat;
    background-size: 40px 30px;
  }

  &--error {
    @extend .input-text--success;

    // background-position: 102% 100%;

    border-color: $magenta;
    background-image: url("../svg/iconspritesmall3.svg#times");
  }
}

input[type="date"],
input[type="number"] {
  padding: $baseunit * 0.25 $baseunit * 0.5 $baseunit * 0.125;
}

.input-textarea {
  display: block;
  flex-wrap: unset;
}

/* The search */
.search {
  &__container {
    display: grid;
    margin-bottom: $baseunit;
    gap: $baseunit * 0.5;
    grid-template-columns: 1fr 1fr 44px;
  }

  &__input {
    padding-right: 50px;
    margin-bottom: 0;
    grid-column: 1 / span 3;
    grid-row: 1;
  }

  &__button {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: center;
    justify-content: center;
    border: 1px solid transparent;
    background-color: $lightgrey;
    border-radius: 2px;
    border-bottom-left-radius: 0;
    border-top-left-radius: 0;
    grid-column: 3 / span 1;
    grid-row: 1;

    &:hover {
      background-color: $darkgrey;
      cursor: pointer;
    }
  }
}

.radio-option {
  display: inline-block;

  &__input {
    display: none;

    &:checked + .radio-option__label {
      background-color: #569bdb;
    }
  }

  &__label {
    border: 1px solid #d9dada;
    border-radius: 2px;
    padding: $baseunit * 0.7 $baseunit * 1.2;
    cursor: pointer;
    margin: 0;
    margin-right: 1em;
    background-color: $white;
  }
}

/* For our friends in the Design Team, we style the radio buttons nice =]. #Teamwork */
.radios__copy {
  margin: 1em 0;
}

.radios__copy:hover::before {
  border-color: $darkgrey;
}

input[type="radio"]:checked + label.radios__copy::before {
  border-color: $green;
}

.radios__copy:hover::after {
  background-color: $darkgrey;
}

input[type="radio"]:checked + label.radios__copy::after {
  background-color: $green;
}

/* The toggle-switch is quite fragile, that's why I rather
   work with "hard" pixels then with EMs */
.toggle-switch__headline {
  position: relative;
  display: inline-block;
  min-width: 40px;
  font-size: 12px;

  &::before {
    position: absolute;
    bottom: -24px;
    display: inline-block;
    width: 40px;
    height: 18px;
    background: $lightgrey;
    border-radius: 1em;
    box-shadow: 0 0 0 1px $lightgrey;
    content: "";
  }

  &::after {
    position: absolute;
    bottom: -31px;
    //bottom: -32px;
    left: 0;
    display: inline-block;
    width: 16px;
    //width: 18px;
    height: 16px;
    background-color: $white;
    border-radius: 50%;
    content: "";
    transform: translate(1px, -50%);
    transition: transform 0.2s ease;
  }

  &:hover::before {
    border-color: $green;
    background: $lightgrey;
    cursor: pointer;
  }

  &:hover::after {
    border-color: $green;
    //background-color: $green;
    cursor: pointer;
  }
}

/* Still toggle-switch = seriously: the following
   selectors are so complicated that I don't want to put
   them into Sass ... */
.toggle-switch__headline:hover::before,
input[type="checkbox"]:checked + .toggle-switch__headline:hover::before {
  background-color: $white;
  box-shadow: 0px 0px 0px 1px $green;
  cursor: pointer;
}

input[type="checkbox"]:checked + .toggle-switch__headline::after {
  transform: translate(23px, -50%);
}

input[type="checkbox"]:checked + .toggle-switch__headline::before {
  background-color: $green;
}

.checkbox-container {
  input {
    position: absolute;
    opacity: 0;
  }

  label {
    margin-top: $baseunit;
    -ms-flexbox: flex;
    display: flex;
    align-items: center;
  }

  label::before {
    display: inline-block;
    border: solid 1px $lightgrey;
    content: "";
    border-radius: 2px;
    height: 20px;
    width: 20px;
    margin-right: 5px;
  }

  input[type="checkbox"]:checked + label::before {
    background-color: $green;
    background-image: url("data:image/svg+xml,%3Csvg aria-hidden='true' data-prefix='fas' data-icon='check' class='svg-inline--fa fa-check fa-w-16' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='white' d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    border: 1px solid transparent;
    background-position: 50% 50%;
    background-size: 65%;
  }

  .checkbox--blue[type="checkbox"]:checked + label::before {
    background-color: $blue;
  }

  input[type="checkbox"]:hover + label::before {
    border: 1px solid $green;
    cursor: pointer;
  }

  .checkbox--blue[type="checkbox"]:hover + label::before {
    border: 1px solid $blue;
    cursor: pointer;
  }

  .checkbox-large {
    &:before {
      height: $baseunit * 2;
      width: $baseunit * 2;
    }
  }
  .checkbox-error {
    &:before {
      border: 1px solid $magenta;
    }
  }
  .checkbox-hover {
    &:before {
      border: 1px solid $green;
    }
  }
  .checkbox-on {
    &:before {
      background-color: $green;
      border: 1px solid transparent;
      background-image: url("data:image/svg+xml,%3Csvg aria-hidden='true' data-prefix='fas' data-icon='check' class='svg-inline--fa fa-check fa-w-16' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='white' d='M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z'/%3E%3C/svg%3E");
      background-repeat: no-repeat;
      background-position: 50% 50%;
      background-size: 65%;
    }
  }
}

// Fieldset Border None for Design reasons.
fieldset {
  border: 1px solid #bbb;  
  margin-bottom: 1em;
}

.fieldset-no-border {
  border: none;
  padding-left: 0;

  legend {
    display: inline-block;
    font-weight: bold;
    padding-left: 0;
  }
}
