---
interface Props {
  actions?: Array<Array<any>>;
  id: string;
  label: string;
  options?: Array<Array<any>>;
  firstOption?: Array<any>;
  klasse?: string;
  required?: boolean;
  requiredValue?: Array<any>;
  disabled?: boolean;
  call?: string;
}

const {actions, id, label, firstOption, required, requiredValue, disabled, call, klasse } = Astro.props;
const { options } = Astro.props as Props;
// TODO: in anderen Komponenten errorname glattziehen
let errorname = `${id}_errorMsg`;
let valueArr;
let triggerArr = JSON.stringify(actions);
if (requiredValue != null) {
valueArr = JSON.stringify(requiredValue);
valueArr = valueArr.replace(/&quot;/g, '')
                   .replace(/"/g, '')
                   .replace(/,/g, '.');
}
---


<label for={id}>{label}</label>
<span class="errormessage" id={errorname}></span>
<select
  class=`dropdown h-drop ${klasse}`
  id={id}
  name={id}
  {required}
  {disabled}
  onchange={call}
  data-required = {valueArr};
  data-trigger = {triggerArr} 
>
  {
    firstOption ? (
      <option value={firstOption[0]} selected>
        {firstOption[1]}
      </option>
    ) : (
      <option disabled value="" selected>
        [Bitte ausw√§hlen]
      </option>
    )
  }

  {options.map((item) => <option value={item[0]}>{item[1]}</option>)}
</select>
